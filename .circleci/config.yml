# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/sikharis/godockci
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run: ssh-keyscan $SSH_SERVER >> ~/.ssh/known_hosts
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker build --tag ${DOCKER_REPO} .
              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS} https://index.docker.io/v1/
              docker push ${DOCKER_REPO}
              echo "stopping running application"
              ssh $DEPLOY_USER@$DEPLOY_HOST 'docker stop dodsv'
              ssh $DEPLOY_USER@$DEPLOY_HOST 'docker rm dodsv'

              echo "pulling latest version of the code"
              ssh $DEPLOY_USER@$DEPLOY_HOST 'docker pull sikharis/godockci:latest'

              echo "starting the new version"
              ssh $DEPLOY_USER@$DEPLOY_HOST 'docker run -d --restart=always --name dodsv -p 80:5432 sikharis/godockci:latest'
              echo "success!"
              exit 0
            fi